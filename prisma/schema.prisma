// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model product {
  id          Int     @id @default(autoincrement())
  title       String
  price       Float
  description String
  image       String?
  isArchive   Boolean @default(false)

  categories category[] @relation("ProductCategory")
  rating     rating?
  carts      cart[]

  createdAt DateTime @default(now())
  updatedAt DateTime @default(now()) @updatedAt
}

model rating {
  id        Int     @id @default(autoincrement())
  rate      Float
  count     Int
  productId Int     @unique
  isArchive Boolean @default(false)

  product product @relation(fields: [productId], references: [id])

  createdAt DateTime @default(now())
  updatedAt DateTime @default(now()) @updatedAt
}

model category {
  id   Int    @id @default(autoincrement())
  name String

  products product[] @relation("ProductCategory")

  createdAt DateTime @default(now())
  updatedAt DateTime @default(now()) @updatedAt
}

model user {
  id        Int     @id @default(autoincrement())
  username  String
  email     String
  image     String?
  isArchive Boolean @default(false)

  carts cart[]

  createdAt DateTime @default(now())
  updatedAt DateTime @default(now()) @updatedAt
}

model cart {
  id         Int     @id @default(autoincrement())
  quantity   Int     @default(1)
  totalPrice Float
  isArchive  Boolean @default(false)

  order     order   @relation(fields: [orderId], references: [id])
  product   product @relation(fields: [productId], references: [id])
  user      user    @relation(fields: [userId], references: [id])
  productId Int
  userId    Int
  orderId   Int

  createdAt DateTime @default(now())
  updatedAt DateTime @default(now()) @updatedAt
}

model order {
  id        Int     @id @default(autoincrement())
  status    String
  isArchive Boolean @default(false)
  cart      cart[]

  createdAt DateTime @default(now())
  updatedAt DateTime @default(now()) @updatedAt
}

model test {
  id    Int     @id @default(autoincrement())
  name  String?
  email String  @default("h-e-l-l-o")
}
