// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Product {
  id          Int     @id @default(autoincrement())
  title       String
  price       Float
  description String
  image       String?
  isArchive   Boolean @default(false)

  rating           Rating?
  categoryxproduct Categoryxproduct[]

  createdAt DateTime    @default(now())
  updatedAt DateTime    @default(now()) @updatedAt
  OrderLine OrderLine[]
}

model Category {
  id               Int                @id @default(autoincrement())
  name             String
  isArchive        Boolean            @default(false)
  categoryxproduct Categoryxproduct[]

  createdAt DateTime @default(now())
  updatedAt DateTime @default(now()) @updatedAt
}

model Categoryxproduct {
  id        Int     @id @default(autoincrement())
  isArchive Boolean @default(false)

  categories Category @relation(fields: [categoryId], references: [id])
  products   Product  @relation(fields: [productId], references: [id])
  categoryId Int
  productId  Int

  createdAt DateTime @default(now())
  updatedAt DateTime @default(now()) @updatedAt
}

model Rating {
  id        Int     @id @default(autoincrement())
  rate      Float
  count     Int
  productId Int     @unique
  isArchive Boolean @default(false)

  product Product @relation(fields: [productId], references: [id])

  createdAt DateTime @default(now())
  updatedAt DateTime @default(now()) @updatedAt
}

model Customer {
  id      Int     @id @default(autoincrement())
  name    String
  email   String  @unique
  image   String?
  phone   String?
  address String?

  customerOrders CustomerOrder[]

  isArchive Boolean  @default(false)
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now()) @updatedAt
}

model OrderLine {
  id        Int      @id @default(autoincrement())
  quantity  Int      @default(1)
  isArchive Boolean  @default(false)
  product   Product  @relation(fields: [productId], references: [id])
  productId Int
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now()) @updatedAt
  Order     Order?   @relation(fields: [orderId], references: [id])
  orderId   Int?
}

model Order {
  id             Int             @id @default(autoincrement())
  status         Status          @default(PENDING)
  isArchive      Boolean         @default(false)
  totalPrice     Int
  orderlines     OrderLine[]
  customerOrders CustomerOrder[]
  createdAt      DateTime        @default(now())
  updatedAt      DateTime        @default(now()) @updatedAt
}

model CustomerOrder {
  id Int @id @default(autoincrement())

  Order   Order? @relation(fields: [orderId], references: [id])
  orderId Int?

  isArchive  Boolean   @default(false)
  createdAt  DateTime  @default(now())
  updatedAt  DateTime  @default(now()) @updatedAt
  Customer   Customer? @relation(fields: [customerId], references: [id])
  customerId Int?
}

model Test {
  id    Int     @id @default(autoincrement())
  name  String?
  email String  @default("h-e-l-l-o")
}

enum Status {
  PENDING
  SUCCESS
  FAIL
}
